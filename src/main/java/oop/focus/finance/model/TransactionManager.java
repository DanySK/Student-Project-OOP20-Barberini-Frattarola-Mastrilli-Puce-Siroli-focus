package oop.focus.finance.model;

import org.joda.time.LocalDate;

import java.util.List;

/**
 * Interface that models a transaction manager,
 * working on all transactions and managing database operations.
 */
public interface TransactionManager extends Manager<Transaction> {


    /**
     * Updates the data of a transaction in the database.
     *
     * @param transaction geing updated
     */
    void update(Transaction transaction);

    /**
     * Stop repetition of a subscription and update it in the database.
     *
     * @param subscription being stopped
     */
    void stopRepeat(Transaction subscription);

    /**
     * @return subscriptions' list
     */
    List<Transaction> getSubscriptions();

    /**
     * @param date until it is time to calculate
     * @return a list of transactions generated by their repetition
     */
    List<Transaction> getGeneratedTransactions(LocalDate date);

    /**
     * @return the total monthly expenditure due to subscriptions
     */
    int monthlyExpense();

    /**
     * @return the total yearly expenditure due to subscriptions
     */
    int yearlyExpense();
}
